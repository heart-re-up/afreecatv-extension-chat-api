spring:
  application:
    name: drawgame-backend
  profiles:
    group:
      development:
        - deployment
      stage:
        - deployment
      production:
        - deployment
  datasource:
    url: jdbc:h2:mem:drawgame
    username: sa
    password: 1234
  h2:
    console:
      enabled: true
      path: /h2
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        show_sql: true
      javax:
        persistence:
          sharedcache:
            mode: ENABLE_SELECTIVE
    generate-ddl: true
    hibernate:
      ddl-auto: create
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
#  quartz:
#    job-store-type: jdbc
#    jdbc:
#      initialize-schema: always
logging:
  level:
    org:
      springframework:
        web:
          client: trace
      hibernate:
        orm:
          jdbc:
            bind: trace
    root: info
# https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config.typesafe-configuration-properties.conversion.durations
jwt:
  token:
    issuer: drawgame
    secret: 244226452948404D6351655468576D5A7134743777217A25432A462D4A614E64
    token-validity-to-access: 12h # 12시간
    token-validity-to-refresh: 14d # 2주
    token-validity-timezone: UTC
    header-name: Authorization
springdoc:
  packages-to-scan: com.streamhelper.microservices.game.draw
  swagger-ui:
    path: swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
#  show-actuator: true
#  api-docs:
#    path: /api-docs/json
#    groups:
#      enabled: true
#  cache:
#    disabled: true
management:
  endpoints:
    web:
      cors:
        allowed-origins: "http://localhost:3000"
        allowed-methods: GET, POST, PATCH, PUT, DELETE, OPTIONS, HEAD
        max-age: 3600
        allowed-headers: "Requestor-Type"
        exposed-headers: "X-Get-Header"
---
# 배포 환경에서는 환경 변수에서 값을 가져오도록합니다.
#spring:
#  config:
#    activate:
#      on-profile: deployment
#server:
#  port: ${SERVER_PORT}
#jwt:
#  header: Authorization
#  secret: ${JWT_SECRET}  # ci 프로젝트 .env 파일 참조
#  token-validity-in-seconds: 86400
---
# 운영 환경의 경우에만 오류 화면이나 스택트레이스가 사용자에게 보여지지 않도록 합니다.
#spring:
#  config:
#    activate:
#      on-profile: stage, production
#server:
#  error:
#    include-stacktrace: never
#    whitelabel:
#      enabled: false